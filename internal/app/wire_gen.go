// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/LucsOlv/Turtwing_Back/config"
	"github.com/LucsOlv/Turtwing_Back/internal/auth"
	"github.com/LucsOlv/Turtwing_Back/internal/handlers"
)

// Injectors from wire.go:

// InitializeApplication é a função que o Wire usará para gerar o código de injeção de dependência
func InitializeApplication() (*Application, error) {
	configConfig := config.NewConfig()
	service := auth.NewService(configConfig)
	authHandler := handlers.NewAuthHandler(service)
	protectedHandler := handlers.NewProtectedHandler()
	application := provideApplication(configConfig, service, authHandler, protectedHandler)
	return application, nil
}

// wire.go:

// provideApplication é um provider para criar uma nova instância da Application
func provideApplication(config2 *config.Config,
	authService *auth.Service,
	authHandler *handlers.AuthHandler,
	protectedHandler *handlers.ProtectedHandler,
) *Application {
	return &Application{
		config:           config2,
		authService:      authService,
		authHandler:      authHandler,
		protectedHandler: protectedHandler,
	}
}
